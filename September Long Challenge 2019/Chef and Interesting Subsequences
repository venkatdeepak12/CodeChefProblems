/*

Chef has a sequence A1,A2,â€¦,AN. This sequence has exactly 2N subsequences. 
Chef considers a subsequence of A interesting if its size is exactly K and the sum of all its elements is minimum possible,
i.e. there is no subsequence with size K which has a smaller sum.

Help Chef find the number of interesting subsequences of the sequence A.

Example Input
1
4 2
1 2 3 4

Example Output
1

Explanation
Example case 1: There are six subsequences with length 2: (1,2), (1,3), (1,4), (2,3), (2,4) and (3,4).
                The minimum sum is 3 and the only subsequence with this sum is (1,2).
                
*/

//Code:

#include <iostream>
#include<bits/stdc++.h>
#include <boost/multiprecision/cpp_int.hpp> 
using namespace boost::multiprecision;
using namespace std;
cpp_int fact(cpp_int n)
{
    if(n==0||n==1)
    {
        return 1;
    }
    else return n*fact(n-1);
}
int main() {
	cpp_int t,s,ans;
	long long n,k,i;
	cin>>t;
	while(t--)
	{
	    cin>>n>>k;
	    long long a[n],b[n],d[1000]={0},c[k],e[1000]={0};
	    for(i=0;i<n;i++)
	    {
	        cin>>a[i];
	        d[a[i]]++;
	        b[i]=a[i];
	    }
	    sort(b,b+n);
	   
	    for(i=0;i<k;i++)
	    {
	       c[i]=b[i];
	       e[c[i]]++;
	    }
	    s=d[b[k-1]];
	    k=e[c[k-1]];
	  // cout<<"s = "<<s<<" k= "<<k <<endl;
	 ans=fact(s)/(fact(s-k)*fact(k));
	   cout<<ans<<endl;
	    
	    //1 1 1 2 2  2 2
	}
	
	return 0;
}
