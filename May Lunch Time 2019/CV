/*
Chef has a string S with length N. He needs to find the number of indices i (1≤i≤N−1) 
such that the i-th character of this string is a consonant and the i+1-th character is a vowel. 
However, he is busy, so he asks for your help.

Note: The letters 'a', 'e', 'i', 'o', 'u' are vowels; all other lowercase English letters are consonants.

Example Input
3
6
bazeci
3
abu
1
o


Example Output
3
1
0


Explanation
Example case 1: The vowel 'a' follows after the consonant 'b', 'e' follows after 'z' and 'i' follows after 'c', so the answer is 3.

Example case 2: The only vowel 'u' follows after 'b', so the answer is 1.

*/
//Code:

#include <iostream>
using namespace std;

int main() {
	long t,n,i,count;
	cin>>t;
	while(t--)
	{
	    cin>>n;
	    char a[n];
	    cin>>a;
	    count=0;
	    for(i=0;i<n-1;i++)
	    {
	        if((a[i]!='a'&&a[i]!='e'&&a[i]!='i'&&a[i]!='o'&&a[i]!='u')&&(a[i+1]=='a'||a[i+1]=='e'||a[i+1]=='i'||a[i+1]=='o'||a[i+1]=='u'))
	        {
	           
	                count++;
	            
	        }
	        
	    }
	    cout<<count<<endl;
	    
	}
	
	return 0;
}
