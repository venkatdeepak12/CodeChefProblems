/*
A dummy palindromic string (DPS) is a string which can be converted into a palindrome 
by performing each of the following operations exactly once:

Permute the characters of the string in an arbitrary way.
Choose a valid index i and change the i-th character of the resulting string to a different character 
(not necessarily present in the original string).
You are given a string S. Find out whether it is a DPS

Example Input
4
code
xyxyxy
sad
baab

Example Output
!DPS
DPS
DPS
!DPS

Explanation
Example case 1: It is impossible to convert the string "code" into a palindrome by permuting and changing a single character.

Example case 2: We can permute the string to "xyxyyx" and then replace the 3-rd character by 'y'. 
                We obtain the string "xyyyyx", which is a palindrome.

Example case 3: In the first operation, we can leave the string unchanged ("sad"), 
                and then, we can replace its 1-st character by 'd'. We obtain "dad", which is a palindrome.
                
*/

//Code:
#include <iostream>
#include<cstring>
#include<bits/stdc++.h>
using namespace std;

int main() {
	long len,t,i,count,n,l;
	cin>>t;
	while(t--)
	{
	    char ch[10000];
	    cin>>ch;
	    count=0;
	    len=strlen(ch);
	    n=len-1;
	    sort(ch,ch+len);
	    count=1;
	   /* l=0;
	    for(i=0;i<len-1;i++)
	    {
	       if(ch[i]==ch[i+1])
	       {
	           count++;
	       }
	       else {
	           d[l]=count;
	           l++;
	           count=1;
	       }
	    }
	    ans=0;
	    for(i=0;i<l;i++)
	    {
	        if(d[l]>1)
	        {
	        ans+=d[l];
	        }
	    }
	    if(ans==len )*/
	    if(len%2!=0)
	    {
	        cout<<"DPS"<<endl;
	    }
	    else
	    {
	        cout<<"!DPS" <<endl;
	    }
	    
	}
	return 0;
}
