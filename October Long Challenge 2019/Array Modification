/*

Chef is really interested in the XOR operation. 
He wants to take a sequence A0,A1,…,AN−1 and for each i from 0 to K−1 inclusive (in this order, one by one),
perform the following operation:

Let's denote a=Ai%N and b=AN−(i%N)−1 before this operation.
Change Ai%N to a⊕b, i.e. a XOR b.
Since Chef is busy, he asked you to find the final sequence he should get after performing these operations.

Example Input
1
2 2
1 2

Example Output
3 1

*/

//Code:

#include <iostream>

#include<bits/stdc++.h>
using namespace std;

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
	long long t,n,i,j,k;
	cin>>t;
	while(t--)
	{
	    cin>>n>>k;
	    long long a[n];
	    for(i=0;i<n;i++)
	    {
	        cin>>a[i];
	    }
	   for(i=0;i<k%(3*n);i++)
	   {
	       a[i%n]=a[i%n]^a[n-(i%n)-1];
	   }
	   if(k>n/2&&n%2!=0)
	   {
	       a[n/2]=0;
	   }
	   for(i=0;i<n;i++)
	   {
	       cout<<a[i]<<" ";
	   }
	   cout<<"\n";
	}
	return 0;
}

